Nonterminals useless in grammar

    indexedelemlisterror


Terminals unused in grammar

    STRING


Rules useless in grammar

  128 indexedelemlisterror: indexedelemlist LEFT_CURLY expr expr RIGHT_CURLY
  129                     | indexedelemlist LEFT_CURLY COLON expr RIGHT_CURLY
  130                     | indexedelemlist LEFT_CURLY expr COLON expr stmt


Rules useless in parser due to conflicts

   87 funcdefopenscope: LEFT_PARENTHESIS


State 4 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 121 conflicts: 14 shift/reduce
State 130 conflicts: 1 shift/reduce
State 185 conflicts: 14 shift/reduce
State 194 conflicts: 2 shift/reduce
State 216 conflicts: 16 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt stmtreduce

    3 stmtreduce: stmt stmtreduce
    4           | ε

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK SEMICOLON
   11     | CONTINUE SEMICOLON
   12     | block
   13     | funcdef
   14     | ignore

   15 expr: assignexpr
   16     | expr op expr
   17     | term

   18 op: PLUS
   19   | MINUS
   20   | MULTIPLICATION
   21   | DIVISION
   22   | MODULO
   23   | GREATER
   24   | GREATER_EQUAL
   25   | LESS
   26   | LESS_EQUAL
   27   | EQUAL
   28   | NOT_EQUAL
   29   | AND
   30   | OR

   31 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   32     | MINUS expr
   33     | NOT expr
   34     | PLUS_PLUS lvalue
   35     | MINUS_MINUS lvalue
   36     | lvalue PLUS_PLUS
   37     | lvalue MINUS_MINUS
   38     | primary

   39 assignexpr: lvalue ASSIGN expr

   40 primary: lvalue
   41        | call
   42        | objectdef
   43        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   44        | const

   45 lvalue: ID
   46       | LOCAL ID
   47       | DOUBLE_COLON ID
   48       | member

   49 member: lvalue DOT ID
   50       | lvalue LEFT_SQUARE expr RIGHT_SQUARE
   51       | call DOT ID
   52       | call LEFT_SQUARE expr RIGHT_SQUARE

   53 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   54     | lvalue callsufix
   55     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   56 callsufix: normcall
   57          | methodcall

   58 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   60 elist: LEFT_SQUARE expressionlist RIGHT_SQUARE

   61 expressionlist: expr
   62               | expr COMMA expressionlist
   63               | expressionlisterror

   64 expressionlisterror: expressionlist COMMA RIGHT_PARENTHESIS
   65                    | expressionlist COMMA RIGHT_SQUARE
   66                    | expressionlist COMMA LEFT_SQUARE
   67                    | expressionlist op
   68                    | expressionlist COMMA RIGHT_CURLY
   69                    | expressionlist COMMA LEFT_CURLY

   70 objectdef: LEFT_SQUARE objectdeflist RIGHT_SQUARE

   71 objectdeflist: elist
   72              | indexed

   73 indexed: LEFT_SQUARE indexedelemlist RIGHT_SQUARE

   74 indexedelemlist: indexedelem
   75                | indexedelem COMMA indexedelemlist

   76 indexedelem: LEFT_CURLY expr COLON expr RIGHT_CURLY

   77 block: blockopenscope stmt blockclosescope
   78      | blockerror

   79 blockopenscope: LEFT_CURLY

   80 blockclosescope: RIGHT_CURLY

   81 blockerror: blockopenscope stmt
   82           | blockclosescope

   83 funcdef: FUNCTION functioname funcdefopenscope idlist RIGHT_PARENTHESIS block
   84        | functionerror

   85 functioname: ID
   86            | ε

   87 funcdefopenscope: LEFT_PARENTHESIS

   88 functionerror: FUNCTION functioname idlist RIGHT_PARENTHESIS block
   89              | FUNCTION functioname LEFT_PARENTHESIS idlist block
   90              | FUNCTION functioname LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS
   91              | FUNCTION functioname LEFT_PARENTHESIS op RIGHT_PARENTHESIS
   92              | FUNCTION functioname LEFT_PARENTHESIS op RIGHT_PARENTHESIS block

   93 const: CONST_REAL
   94      | CONST_INT
   95      | CONST_STRING
   96      | NIL
   97      | TRUE
   98      | FALSE

   99 idlist: ID
  100       | ID COMMA idlist
  101       | idlisterror

  102 idlisterror: ID COMMA LEFT_PARENTHESIS

  103 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
  104       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt
  105       | IF specialparenthesiserror

  106 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
  107          | WHILE specialparenthesiserror

  108 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  109        | FOR parenthesiserror
  110        | forstmterror

  111 forstmterror: FOR LEFT_PARENTHESIS elist expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  112             | FOR LEFT_PARENTHESIS elist expr SEMICOLON elist RIGHT_PARENTHESIS
  113             | FOR elist SEMICOLON expr elist RIGHT_PARENTHESIS stmt
  114             | FOR RIGHT_PARENTHESIS elist LEFT_PARENTHESIS
  115             | FOR RIGHT_PARENTHESIS LEFT_PARENTHESIS

  116 parenthesiserror: RIGHT_PARENTHESIS
  117                 | LEFT_PARENTHESIS expr RIGHT_CURLY
  118                 | LEFT_PARENTHESIS expr LEFT_CURLY

  119 specialparenthesiserror: LEFT_PARENTHESIS stmt
  120                        | parenthesiserror

  121 returnstmt: RETURN returnstmts

  122 returnstmts: expr SEMICOLON
  123            | SEMICOLON
  124            | op SEMICOLON

  125 ignore: BLOCK_COMMENT
  126       | COMMENT_LINE
  127       | COMMENT_NESTED


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 103 104 105
    ELSE (259) 104
    WHILE (260) 106 107
    FOR (261) 108 109 111 112 113 114 115
    FUNCTION (262) 83 88 89 90 91 92
    RETURN (263) 121
    BREAK (264) 10
    CONTINUE (265) 11
    AND (266) 29
    NOT (267) 33
    OR (268) 30
    LOCAL (269) 46
    TRUE (270) 97
    FALSE (271) 98
    NIL (272) 96
    ASSIGN (273) 39
    PLUS (274) 18
    MINUS (275) 19 32
    MULTIPLICATION (276) 20
    DIVISION (277) 21
    MODULO (278) 22
    EQUAL (279) 27
    NOT_EQUAL (280) 28
    PLUS_PLUS (281) 34 36
    MINUS_MINUS (282) 35 37
    GREATER (283) 23
    LESS (284) 25
    GREATER_EQUAL (285) 24
    LESS_EQUAL (286) 26
    LEFT_CURLY (287) 69 76 79 118
    RIGHT_CURLY (288) 68 76 80 117
    LEFT_SQUARE (289) 50 52 60 66 70 73
    RIGHT_SQUARE (290) 50 52 60 65 70 73
    LEFT_PARENTHESIS (291) 31 43 53 55 58 59 87 89 90 91 92 102 103 104 106 108 111 112 114 115 117 118 119
    RIGHT_PARENTHESIS (292) 31 43 53 55 58 59 64 83 88 90 91 92 103 104 106 108 111 112 113 114 115 116
    SEMICOLON (293) 5 10 11 108 111 112 113 122 123 124
    COMMA (294) 62 64 65 66 68 69 75 100 102
    COLON (295) 76
    DOUBLE_COLON (296) 47
    DOT (297) 49 51
    DOUBLE_DOT (298) 59
    ID <str_val> (299) 45 46 47 49 51 59 85 99 100 102
    CONST_INT <int_val> (300) 94
    CONST_REAL <double_val> (301) 93
    CONST_STRING <str_val> (302) 95
    COMMENT_NESTED (303) 127
    BLOCK_COMMENT (304) 125
    COMMENT_LINE (305) 126
    STRING (306)
    UMINUS (307)
    EXPRESSION_READ_NEXT_CHARACTER (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    stmts (56)
        on left: 2
        on right: 1
    stmtreduce (57)
        on left: 3 4
        on right: 2 3
    stmt (58)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 77 81 103 104 106 108 111 113 119
    expr (59)
        on left: 15 16 17
        on right: 5 16 31 32 33 39 50 52 61 62 76 103 104 106 108 111 112 113 117 118 122
    op (60)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 16 67 91 92 124
    term (61)
        on left: 31 32 33 34 35 36 37 38
        on right: 17
    assignexpr (62)
        on left: 39
        on right: 15
    primary (63)
        on left: 40 41 42 43 44
        on right: 38
    lvalue <node> (64)
        on left: 45 46 47 48
        on right: 34 35 36 37 39 40 49 50 54
    member (65)
        on left: 49 50 51 52
        on right: 48
    call (66)
        on left: 53 54 55
        on right: 41 51 52 53
    callsufix (67)
        on left: 56 57
        on right: 54
    normcall (68)
        on left: 58
        on right: 56
    methodcall (69)
        on left: 59
        on right: 57
    elist (70)
        on left: 60
        on right: 53 55 58 59 71 108 111 112 113 114
    expressionlist (71)
        on left: 61 62 63
        on right: 60 62 64 65 66 67 68 69
    expressionlisterror (72)
        on left: 64 65 66 67 68 69
        on right: 63
    objectdef (73)
        on left: 70
        on right: 42
    objectdeflist (74)
        on left: 71 72
        on right: 70
    indexed (75)
        on left: 73
        on right: 72
    indexedelemlist (76)
        on left: 74 75
        on right: 73 75
    indexedelem (77)
        on left: 76
        on right: 74 75
    block (78)
        on left: 77 78
        on right: 12 83 88 89 92
    blockopenscope (79)
        on left: 79
        on right: 77 81
    blockclosescope (80)
        on left: 80
        on right: 77 82
    blockerror (81)
        on left: 81 82
        on right: 78
    funcdef (82)
        on left: 83 84
        on right: 13 43 55
    functioname (83)
        on left: 85 86
        on right: 83 88 89 90 91 92
    funcdefopenscope (84)
        on left: 87
        on right: 83
    functionerror (85)
        on left: 88 89 90 91 92
        on right: 84
    const (86)
        on left: 93 94 95 96 97 98
        on right: 44
    idlist (87)
        on left: 99 100 101
        on right: 83 88 89 90 100
    idlisterror (88)
        on left: 102
        on right: 101
    ifstmt (89)
        on left: 103 104 105
        on right: 6
    whilestmt (90)
        on left: 106 107
        on right: 7
    forstmt (91)
        on left: 108 109 110
        on right: 8
    forstmterror (92)
        on left: 111 112 113 114 115
        on right: 110
    parenthesiserror (93)
        on left: 116 117 118
        on right: 109 120
    specialparenthesiserror (94)
        on left: 119 120
        on right: 105 107
    returnstmt (95)
        on left: 121
        on right: 9
    returnstmts (96)
        on left: 122 123 124
        on right: 121
    ignore (97)
        on left: 125 126 127
        on right: 14


State 0

    0 $accept: • program $end

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    program          go to state 28
    stmts            go to state 29
    stmt             go to state 30
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 1

  103 ifstmt: IF • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
  104       | IF • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt
  105       | IF • specialparenthesiserror

    LEFT_PARENTHESIS   shift, and go to state 52
    RIGHT_PARENTHESIS  shift, and go to state 53

    parenthesiserror         go to state 54
    specialparenthesiserror  go to state 55


State 2

  106 whilestmt: WHILE • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
  107          | WHILE • specialparenthesiserror

    LEFT_PARENTHESIS   shift, and go to state 56
    RIGHT_PARENTHESIS  shift, and go to state 53

    parenthesiserror         go to state 54
    specialparenthesiserror  go to state 57


State 3

  108 forstmt: FOR • LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  109        | FOR • parenthesiserror
  111 forstmterror: FOR • LEFT_PARENTHESIS elist expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  112             | FOR • LEFT_PARENTHESIS elist expr SEMICOLON elist RIGHT_PARENTHESIS
  113             | FOR • elist SEMICOLON expr elist RIGHT_PARENTHESIS stmt
  114             | FOR • RIGHT_PARENTHESIS elist LEFT_PARENTHESIS
  115             | FOR • RIGHT_PARENTHESIS LEFT_PARENTHESIS

    LEFT_SQUARE        shift, and go to state 58
    LEFT_PARENTHESIS   shift, and go to state 59
    RIGHT_PARENTHESIS  shift, and go to state 60

    elist             go to state 61
    parenthesiserror  go to state 62


State 4

   83 funcdef: FUNCTION • functioname funcdefopenscope idlist RIGHT_PARENTHESIS block
   88 functionerror: FUNCTION • functioname idlist RIGHT_PARENTHESIS block
   89              | FUNCTION • functioname LEFT_PARENTHESIS idlist block
   90              | FUNCTION • functioname LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS
   91              | FUNCTION • functioname LEFT_PARENTHESIS op RIGHT_PARENTHESIS
   92              | FUNCTION • functioname LEFT_PARENTHESIS op RIGHT_PARENTHESIS block

    ID  shift, and go to state 63

    ID        [reduce using rule 86 (functioname)]
    $default  reduce using rule 86 (functioname)

    functioname  go to state 64


State 5

  121 returnstmt: RETURN • returnstmts

    AND               shift, and go to state 65
    NOT               shift, and go to state 8
    OR                shift, and go to state 66
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    PLUS              shift, and go to state 67
    MINUS             shift, and go to state 68
    MULTIPLICATION    shift, and go to state 69
    DIVISION          shift, and go to state 70
    MODULO            shift, and go to state 71
    EQUAL             shift, and go to state 72
    NOT_EQUAL         shift, and go to state 73
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    GREATER           shift, and go to state 74
    LESS              shift, and go to state 75
    GREATER_EQUAL     shift, and go to state 76
    LESS_EQUAL        shift, and go to state 77
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    SEMICOLON         shift, and go to state 78
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr         go to state 79
    op           go to state 80
    term         go to state 32
    assignexpr   go to state 33
    primary      go to state 34
    lvalue       go to state 35
    member       go to state 36
    call         go to state 37
    objectdef    go to state 38
    const        go to state 45
    returnstmts  go to state 81


State 6

   10 stmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 7

   11 stmt: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 83


State 8

   33 term: NOT • expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 84
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 9

   46 lvalue: LOCAL • ID

    ID  shift, and go to state 85


State 10

   97 const: TRUE •

    $default  reduce using rule 97 (const)


State 11

   98 const: FALSE •

    $default  reduce using rule 98 (const)


State 12

   96 const: NIL •

    $default  reduce using rule 96 (const)


State 13

   32 term: MINUS • expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 86
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 14

   34 term: PLUS_PLUS • lvalue

    LOCAL             shift, and go to state 9
    LEFT_PARENTHESIS  shift, and go to state 87
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21

    lvalue  go to state 88
    member  go to state 36
    call    go to state 89


State 15

   35 term: MINUS_MINUS • lvalue

    LOCAL             shift, and go to state 9
    LEFT_PARENTHESIS  shift, and go to state 87
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21

    lvalue  go to state 90
    member  go to state 36
    call    go to state 89


State 16

   79 blockopenscope: LEFT_CURLY •

    $default  reduce using rule 79 (blockopenscope)


State 17

   80 blockclosescope: RIGHT_CURLY •

    $default  reduce using rule 80 (blockclosescope)


State 18

   70 objectdef: LEFT_SQUARE • objectdeflist RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 91

    elist          go to state 92
    objectdeflist  go to state 93
    indexed        go to state 94


State 19

   31 term: LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS
   43 primary: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS
   55 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION          shift, and go to state 4
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr           go to state 95
    term           go to state 32
    assignexpr     go to state 33
    primary        go to state 34
    lvalue         go to state 35
    member         go to state 36
    call           go to state 37
    objectdef      go to state 38
    funcdef        go to state 96
    functionerror  go to state 44
    const          go to state 45


State 20

   47 lvalue: DOUBLE_COLON • ID

    ID  shift, and go to state 97


State 21

   45 lvalue: ID •

    $default  reduce using rule 45 (lvalue)


State 22

   94 const: CONST_INT •

    $default  reduce using rule 94 (const)


State 23

   93 const: CONST_REAL •

    $default  reduce using rule 93 (const)


State 24

   95 const: CONST_STRING •

    $default  reduce using rule 95 (const)


State 25

  127 ignore: COMMENT_NESTED •

    $default  reduce using rule 127 (ignore)


State 26

  125 ignore: BLOCK_COMMENT •

    $default  reduce using rule 125 (ignore)


State 27

  126 ignore: COMMENT_LINE •

    $default  reduce using rule 126 (ignore)


State 28

    0 $accept: program • $end

    $end  shift, and go to state 98


State 29

    1 program: stmts •

    $default  reduce using rule 1 (program)


State 30

    2 stmts: stmt • stmtreduce

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    $default  reduce using rule 4 (stmtreduce)

    stmtreduce       go to state 99
    stmt             go to state 100
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 31

    5 stmt: expr • SEMICOLON
   16 expr: expr • op expr

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    SEMICOLON       shift, and go to state 102

    op  go to state 103


State 32

   17 expr: term •

    $default  reduce using rule 17 (expr)


State 33

   15 expr: assignexpr •

    $default  reduce using rule 15 (expr)


State 34

   38 term: primary •

    $default  reduce using rule 38 (term)


State 35

   36 term: lvalue • PLUS_PLUS
   37     | lvalue • MINUS_MINUS
   39 assignexpr: lvalue • ASSIGN expr
   40 primary: lvalue •
   49 member: lvalue • DOT ID
   50       | lvalue • LEFT_SQUARE expr RIGHT_SQUARE
   54 call: lvalue • callsufix

    ASSIGN            shift, and go to state 104
    PLUS_PLUS         shift, and go to state 105
    MINUS_MINUS       shift, and go to state 106
    LEFT_SQUARE       shift, and go to state 107
    LEFT_PARENTHESIS  shift, and go to state 108
    DOT               shift, and go to state 109
    DOUBLE_DOT        shift, and go to state 110

    LEFT_SQUARE  [reduce using rule 40 (primary)]
    $default     reduce using rule 40 (primary)

    callsufix   go to state 111
    normcall    go to state 112
    methodcall  go to state 113


State 36

   48 lvalue: member •

    $default  reduce using rule 48 (lvalue)


State 37

   41 primary: call •
   51 member: call • DOT ID
   52       | call • LEFT_SQUARE expr RIGHT_SQUARE
   53 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_SQUARE       shift, and go to state 114
    LEFT_PARENTHESIS  shift, and go to state 115
    DOT               shift, and go to state 116

    LEFT_SQUARE  [reduce using rule 41 (primary)]
    $default     reduce using rule 41 (primary)


State 38

   42 primary: objectdef •

    $default  reduce using rule 42 (primary)


State 39

   12 stmt: block •

    $default  reduce using rule 12 (stmt)


State 40

   77 block: blockopenscope • stmt blockclosescope
   81 blockerror: blockopenscope • stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 117
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 41

   82 blockerror: blockclosescope •

    $default  reduce using rule 82 (blockerror)


State 42

   78 block: blockerror •

    $default  reduce using rule 78 (block)


State 43

   13 stmt: funcdef •

    $default  reduce using rule 13 (stmt)


State 44

   84 funcdef: functionerror •

    $default  reduce using rule 84 (funcdef)


State 45

   44 primary: const •

    $default  reduce using rule 44 (primary)


State 46

    6 stmt: ifstmt •

    $default  reduce using rule 6 (stmt)


State 47

    7 stmt: whilestmt •

    $default  reduce using rule 7 (stmt)


State 48

    8 stmt: forstmt •

    $default  reduce using rule 8 (stmt)


State 49

  110 forstmt: forstmterror •

    $default  reduce using rule 110 (forstmt)


State 50

    9 stmt: returnstmt •

    $default  reduce using rule 9 (stmt)


State 51

   14 stmt: ignore •

    $default  reduce using rule 14 (stmt)


State 52

  103 ifstmt: IF LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS stmt
  104       | IF LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS stmt ELSE stmt
  117 parenthesiserror: LEFT_PARENTHESIS • expr RIGHT_CURLY
  118                 | LEFT_PARENTHESIS • expr LEFT_CURLY
  119 specialparenthesiserror: LEFT_PARENTHESIS • stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 118
    expr             go to state 119
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 53

  116 parenthesiserror: RIGHT_PARENTHESIS •

    $default  reduce using rule 116 (parenthesiserror)


State 54

  120 specialparenthesiserror: parenthesiserror •

    $default  reduce using rule 120 (specialparenthesiserror)


State 55

  105 ifstmt: IF specialparenthesiserror •

    $default  reduce using rule 105 (ifstmt)


State 56

  106 whilestmt: WHILE LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS stmt
  117 parenthesiserror: LEFT_PARENTHESIS • expr RIGHT_CURLY
  118                 | LEFT_PARENTHESIS • expr LEFT_CURLY
  119 specialparenthesiserror: LEFT_PARENTHESIS • stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 118
    expr             go to state 120
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 57

  107 whilestmt: WHILE specialparenthesiserror •

    $default  reduce using rule 107 (whilestmt)


State 58

   60 elist: LEFT_SQUARE • expressionlist RIGHT_SQUARE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr                 go to state 121
    term                 go to state 32
    assignexpr           go to state 33
    primary              go to state 34
    lvalue               go to state 35
    member               go to state 36
    call                 go to state 37
    expressionlist       go to state 122
    expressionlisterror  go to state 123
    objectdef            go to state 38
    const                go to state 45


State 59

  108 forstmt: FOR LEFT_PARENTHESIS • elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  111 forstmterror: FOR LEFT_PARENTHESIS • elist expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  112             | FOR LEFT_PARENTHESIS • elist expr SEMICOLON elist RIGHT_PARENTHESIS
  117 parenthesiserror: LEFT_PARENTHESIS • expr RIGHT_CURLY
  118                 | LEFT_PARENTHESIS • expr LEFT_CURLY

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 124
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 125
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    elist       go to state 126
    objectdef   go to state 38
    const       go to state 45


State 60

  114 forstmterror: FOR RIGHT_PARENTHESIS • elist LEFT_PARENTHESIS
  115             | FOR RIGHT_PARENTHESIS • LEFT_PARENTHESIS
  116 parenthesiserror: RIGHT_PARENTHESIS •

    LEFT_PARENTHESIS  shift, and go to state 127

    $default  reduce using rule 116 (parenthesiserror)

    elist  go to state 128


State 61

  113 forstmterror: FOR elist • SEMICOLON expr elist RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 129


State 62

  109 forstmt: FOR parenthesiserror •

    $default  reduce using rule 109 (forstmt)


State 63

   85 functioname: ID •

    $default  reduce using rule 85 (functioname)


State 64

   83 funcdef: FUNCTION functioname • funcdefopenscope idlist RIGHT_PARENTHESIS block
   88 functionerror: FUNCTION functioname • idlist RIGHT_PARENTHESIS block
   89              | FUNCTION functioname • LEFT_PARENTHESIS idlist block
   90              | FUNCTION functioname • LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS
   91              | FUNCTION functioname • LEFT_PARENTHESIS op RIGHT_PARENTHESIS
   92              | FUNCTION functioname • LEFT_PARENTHESIS op RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 130
    ID                shift, and go to state 131

    funcdefopenscope  go to state 132
    idlist            go to state 133
    idlisterror       go to state 134


State 65

   29 op: AND •

    $default  reduce using rule 29 (op)


State 66

   30 op: OR •

    $default  reduce using rule 30 (op)


State 67

   18 op: PLUS •

    $default  reduce using rule 18 (op)


State 68

   19 op: MINUS •
   32 term: MINUS • expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    $default  reduce using rule 19 (op)

    expr        go to state 86
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 69

   20 op: MULTIPLICATION •

    $default  reduce using rule 20 (op)


State 70

   21 op: DIVISION •

    $default  reduce using rule 21 (op)


State 71

   22 op: MODULO •

    $default  reduce using rule 22 (op)


State 72

   27 op: EQUAL •

    $default  reduce using rule 27 (op)


State 73

   28 op: NOT_EQUAL •

    $default  reduce using rule 28 (op)


State 74

   23 op: GREATER •

    $default  reduce using rule 23 (op)


State 75

   25 op: LESS •

    $default  reduce using rule 25 (op)


State 76

   24 op: GREATER_EQUAL •

    $default  reduce using rule 24 (op)


State 77

   26 op: LESS_EQUAL •

    $default  reduce using rule 26 (op)


State 78

  123 returnstmts: SEMICOLON •

    $default  reduce using rule 123 (returnstmts)


State 79

   16 expr: expr • op expr
  122 returnstmts: expr • SEMICOLON

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    SEMICOLON       shift, and go to state 135

    op  go to state 103


State 80

  124 returnstmts: op • SEMICOLON

    SEMICOLON  shift, and go to state 136


State 81

  121 returnstmt: RETURN returnstmts •

    $default  reduce using rule 121 (returnstmt)


State 82

   10 stmt: BREAK SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 83

   11 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 11 (stmt)


State 84

   16 expr: expr • op expr
   33 term: NOT expr •

    $default  reduce using rule 33 (term)

    op  go to state 103


State 85

   46 lvalue: LOCAL ID •

    $default  reduce using rule 46 (lvalue)


State 86

   16 expr: expr • op expr
   32 term: MINUS expr •

    $default  reduce using rule 32 (term)

    op  go to state 103


State 87

   55 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 4

    funcdef        go to state 137
    functionerror  go to state 44


State 88

   34 term: PLUS_PLUS lvalue •
   49 member: lvalue • DOT ID
   50       | lvalue • LEFT_SQUARE expr RIGHT_SQUARE
   54 call: lvalue • callsufix

    LEFT_SQUARE       shift, and go to state 107
    LEFT_PARENTHESIS  shift, and go to state 108
    DOT               shift, and go to state 109
    DOUBLE_DOT        shift, and go to state 110

    $default  reduce using rule 34 (term)

    callsufix   go to state 111
    normcall    go to state 112
    methodcall  go to state 113


State 89

   51 member: call • DOT ID
   52       | call • LEFT_SQUARE expr RIGHT_SQUARE
   53 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_SQUARE       shift, and go to state 114
    LEFT_PARENTHESIS  shift, and go to state 115
    DOT               shift, and go to state 116


State 90

   35 term: MINUS_MINUS lvalue •
   49 member: lvalue • DOT ID
   50       | lvalue • LEFT_SQUARE expr RIGHT_SQUARE
   54 call: lvalue • callsufix

    LEFT_SQUARE       shift, and go to state 107
    LEFT_PARENTHESIS  shift, and go to state 108
    DOT               shift, and go to state 109
    DOUBLE_DOT        shift, and go to state 110

    $default  reduce using rule 35 (term)

    callsufix   go to state 111
    normcall    go to state 112
    methodcall  go to state 113


State 91

   60 elist: LEFT_SQUARE • expressionlist RIGHT_SQUARE
   73 indexed: LEFT_SQUARE • indexedelemlist RIGHT_SQUARE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 138
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr                 go to state 121
    term                 go to state 32
    assignexpr           go to state 33
    primary              go to state 34
    lvalue               go to state 35
    member               go to state 36
    call                 go to state 37
    expressionlist       go to state 122
    expressionlisterror  go to state 123
    objectdef            go to state 38
    indexedelemlist      go to state 139
    indexedelem          go to state 140
    const                go to state 45


State 92

   71 objectdeflist: elist •

    $default  reduce using rule 71 (objectdeflist)


State 93

   70 objectdef: LEFT_SQUARE objectdeflist • RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 141


State 94

   72 objectdeflist: indexed •

    $default  reduce using rule 72 (objectdeflist)


State 95

   16 expr: expr • op expr
   31 term: LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS

    AND                shift, and go to state 65
    OR                 shift, and go to state 66
    PLUS               shift, and go to state 67
    MINUS              shift, and go to state 101
    MULTIPLICATION     shift, and go to state 69
    DIVISION           shift, and go to state 70
    MODULO             shift, and go to state 71
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    GREATER            shift, and go to state 74
    LESS               shift, and go to state 75
    GREATER_EQUAL      shift, and go to state 76
    LESS_EQUAL         shift, and go to state 77
    RIGHT_PARENTHESIS  shift, and go to state 142

    op  go to state 103


State 96

   43 primary: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS
   55 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 143


State 97

   47 lvalue: DOUBLE_COLON ID •

    $default  reduce using rule 47 (lvalue)


State 98

    0 $accept: program $end •

    $default  accept


State 99

    2 stmts: stmt stmtreduce •

    $default  reduce using rule 2 (stmts)


State 100

    3 stmtreduce: stmt • stmtreduce

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    $default  reduce using rule 4 (stmtreduce)

    stmtreduce       go to state 144
    stmt             go to state 100
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 101

   19 op: MINUS •

    $default  reduce using rule 19 (op)


State 102

    5 stmt: expr SEMICOLON •

    $default  reduce using rule 5 (stmt)


State 103

   16 expr: expr op • expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 145
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 104

   39 assignexpr: lvalue ASSIGN • expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 146
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 105

   36 term: lvalue PLUS_PLUS •

    $default  reduce using rule 36 (term)


State 106

   37 term: lvalue MINUS_MINUS •

    $default  reduce using rule 37 (term)


State 107

   50 member: lvalue LEFT_SQUARE • expr RIGHT_SQUARE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 147
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 108

   58 normcall: LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    LEFT_SQUARE  shift, and go to state 58

    elist  go to state 148


State 109

   49 member: lvalue DOT • ID

    ID  shift, and go to state 149


State 110

   59 methodcall: DOUBLE_DOT • ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 150


State 111

   54 call: lvalue callsufix •

    $default  reduce using rule 54 (call)


State 112

   56 callsufix: normcall •

    $default  reduce using rule 56 (callsufix)


State 113

   57 callsufix: methodcall •

    $default  reduce using rule 57 (callsufix)


State 114

   52 member: call LEFT_SQUARE • expr RIGHT_SQUARE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 151
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 115

   53 call: call LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    LEFT_SQUARE  shift, and go to state 58

    elist  go to state 152


State 116

   51 member: call DOT • ID

    ID  shift, and go to state 153


State 117

   77 block: blockopenscope stmt • blockclosescope
   81 blockerror: blockopenscope stmt •

    RIGHT_CURLY  shift, and go to state 17

    RIGHT_CURLY  [reduce using rule 81 (blockerror)]
    $default     reduce using rule 81 (blockerror)

    blockclosescope  go to state 154


State 118

  119 specialparenthesiserror: LEFT_PARENTHESIS stmt •

    $default  reduce using rule 119 (specialparenthesiserror)


State 119

    5 stmt: expr • SEMICOLON
   16 expr: expr • op expr
  103 ifstmt: IF LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS stmt
  104       | IF LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS stmt ELSE stmt
  117 parenthesiserror: LEFT_PARENTHESIS expr • RIGHT_CURLY
  118                 | LEFT_PARENTHESIS expr • LEFT_CURLY

    AND                shift, and go to state 65
    OR                 shift, and go to state 66
    PLUS               shift, and go to state 67
    MINUS              shift, and go to state 101
    MULTIPLICATION     shift, and go to state 69
    DIVISION           shift, and go to state 70
    MODULO             shift, and go to state 71
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    GREATER            shift, and go to state 74
    LESS               shift, and go to state 75
    GREATER_EQUAL      shift, and go to state 76
    LESS_EQUAL         shift, and go to state 77
    LEFT_CURLY         shift, and go to state 155
    RIGHT_CURLY        shift, and go to state 156
    RIGHT_PARENTHESIS  shift, and go to state 157
    SEMICOLON          shift, and go to state 102

    op  go to state 103


State 120

    5 stmt: expr • SEMICOLON
   16 expr: expr • op expr
  106 whilestmt: WHILE LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS stmt
  117 parenthesiserror: LEFT_PARENTHESIS expr • RIGHT_CURLY
  118                 | LEFT_PARENTHESIS expr • LEFT_CURLY

    AND                shift, and go to state 65
    OR                 shift, and go to state 66
    PLUS               shift, and go to state 67
    MINUS              shift, and go to state 101
    MULTIPLICATION     shift, and go to state 69
    DIVISION           shift, and go to state 70
    MODULO             shift, and go to state 71
    EQUAL              shift, and go to state 72
    NOT_EQUAL          shift, and go to state 73
    GREATER            shift, and go to state 74
    LESS               shift, and go to state 75
    GREATER_EQUAL      shift, and go to state 76
    LESS_EQUAL         shift, and go to state 77
    LEFT_CURLY         shift, and go to state 155
    RIGHT_CURLY        shift, and go to state 156
    RIGHT_PARENTHESIS  shift, and go to state 158
    SEMICOLON          shift, and go to state 102

    op  go to state 103


State 121

   16 expr: expr • op expr
   61 expressionlist: expr •
   62               | expr • COMMA expressionlist

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    COMMA           shift, and go to state 159

    AND             [reduce using rule 61 (expressionlist)]
    OR              [reduce using rule 61 (expressionlist)]
    PLUS            [reduce using rule 61 (expressionlist)]
    MINUS           [reduce using rule 61 (expressionlist)]
    MULTIPLICATION  [reduce using rule 61 (expressionlist)]
    DIVISION        [reduce using rule 61 (expressionlist)]
    MODULO          [reduce using rule 61 (expressionlist)]
    EQUAL           [reduce using rule 61 (expressionlist)]
    NOT_EQUAL       [reduce using rule 61 (expressionlist)]
    GREATER         [reduce using rule 61 (expressionlist)]
    LESS            [reduce using rule 61 (expressionlist)]
    GREATER_EQUAL   [reduce using rule 61 (expressionlist)]
    LESS_EQUAL      [reduce using rule 61 (expressionlist)]
    COMMA           [reduce using rule 61 (expressionlist)]
    $default        reduce using rule 61 (expressionlist)

    op  go to state 103


State 122

   60 elist: LEFT_SQUARE expressionlist • RIGHT_SQUARE
   64 expressionlisterror: expressionlist • COMMA RIGHT_PARENTHESIS
   65                    | expressionlist • COMMA RIGHT_SQUARE
   66                    | expressionlist • COMMA LEFT_SQUARE
   67                    | expressionlist • op
   68                    | expressionlist • COMMA RIGHT_CURLY
   69                    | expressionlist • COMMA LEFT_CURLY

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    RIGHT_SQUARE    shift, and go to state 160
    COMMA           shift, and go to state 161

    op  go to state 162


State 123

   63 expressionlist: expressionlisterror •

    $default  reduce using rule 63 (expressionlist)


State 124

   60 elist: LEFT_SQUARE • expressionlist RIGHT_SQUARE
   70 objectdef: LEFT_SQUARE • objectdeflist RIGHT_SQUARE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 163
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr                 go to state 121
    term                 go to state 32
    assignexpr           go to state 33
    primary              go to state 34
    lvalue               go to state 35
    member               go to state 36
    call                 go to state 37
    elist                go to state 92
    expressionlist       go to state 122
    expressionlisterror  go to state 123
    objectdef            go to state 38
    objectdeflist        go to state 93
    indexed              go to state 94
    const                go to state 45


State 125

   16 expr: expr • op expr
  117 parenthesiserror: LEFT_PARENTHESIS expr • RIGHT_CURLY
  118                 | LEFT_PARENTHESIS expr • LEFT_CURLY

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    LEFT_CURLY      shift, and go to state 155
    RIGHT_CURLY     shift, and go to state 156

    op  go to state 103


State 126

  108 forstmt: FOR LEFT_PARENTHESIS elist • SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  111 forstmterror: FOR LEFT_PARENTHESIS elist • expr SEMICOLON elist RIGHT_PARENTHESIS stmt
  112             | FOR LEFT_PARENTHESIS elist • expr SEMICOLON elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    SEMICOLON         shift, and go to state 164
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 165
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 127

  115 forstmterror: FOR RIGHT_PARENTHESIS LEFT_PARENTHESIS •

    $default  reduce using rule 115 (forstmterror)


State 128

  114 forstmterror: FOR RIGHT_PARENTHESIS elist • LEFT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 166


State 129

  113 forstmterror: FOR elist SEMICOLON • expr elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 167
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 130

   87 funcdefopenscope: LEFT_PARENTHESIS •
   89 functionerror: FUNCTION functioname LEFT_PARENTHESIS • idlist block
   90              | FUNCTION functioname LEFT_PARENTHESIS • idlist RIGHT_PARENTHESIS
   91              | FUNCTION functioname LEFT_PARENTHESIS • op RIGHT_PARENTHESIS
   92              | FUNCTION functioname LEFT_PARENTHESIS • op RIGHT_PARENTHESIS block

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    ID              shift, and go to state 131

    ID  [reduce using rule 87 (funcdefopenscope)]

    op           go to state 168
    idlist       go to state 169
    idlisterror  go to state 134


State 131

   99 idlist: ID •
  100       | ID • COMMA idlist
  102 idlisterror: ID • COMMA LEFT_PARENTHESIS

    COMMA  shift, and go to state 170

    $default  reduce using rule 99 (idlist)


State 132

   83 funcdef: FUNCTION functioname funcdefopenscope • idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 131

    idlist       go to state 171
    idlisterror  go to state 134


State 133

   88 functionerror: FUNCTION functioname idlist • RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 172


State 134

  101 idlist: idlisterror •

    $default  reduce using rule 101 (idlist)


State 135

  122 returnstmts: expr SEMICOLON •

    $default  reduce using rule 122 (returnstmts)


State 136

  124 returnstmts: op SEMICOLON •

    $default  reduce using rule 124 (returnstmts)


State 137

   55 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 173


State 138

   76 indexedelem: LEFT_CURLY • expr COLON expr RIGHT_CURLY

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 174
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 139

   73 indexed: LEFT_SQUARE indexedelemlist • RIGHT_SQUARE

    RIGHT_SQUARE  shift, and go to state 175


State 140

   74 indexedelemlist: indexedelem •
   75                | indexedelem • COMMA indexedelemlist

    COMMA  shift, and go to state 176

    $default  reduce using rule 74 (indexedelemlist)


State 141

   70 objectdef: LEFT_SQUARE objectdeflist RIGHT_SQUARE •

    $default  reduce using rule 70 (objectdef)


State 142

   31 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS •

    $default  reduce using rule 31 (term)


State 143

   43 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS •
   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 177

    $default  reduce using rule 43 (primary)


State 144

    3 stmtreduce: stmt stmtreduce •

    $default  reduce using rule 3 (stmtreduce)


State 145

   16 expr: expr • op expr
   16     | expr op expr •

    $default  reduce using rule 16 (expr)

    op  go to state 103


State 146

   16 expr: expr • op expr
   39 assignexpr: lvalue ASSIGN expr •

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77

    $default  reduce using rule 39 (assignexpr)

    op  go to state 103


State 147

   16 expr: expr • op expr
   50 member: lvalue LEFT_SQUARE expr • RIGHT_SQUARE

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    RIGHT_SQUARE    shift, and go to state 178

    op  go to state 103


State 148

   58 normcall: LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 179


State 149

   49 member: lvalue DOT ID •

    $default  reduce using rule 49 (member)


State 150

   59 methodcall: DOUBLE_DOT ID • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 180


State 151

   16 expr: expr • op expr
   52 member: call LEFT_SQUARE expr • RIGHT_SQUARE

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    RIGHT_SQUARE    shift, and go to state 181

    op  go to state 103


State 152

   53 call: call LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 182


State 153

   51 member: call DOT ID •

    $default  reduce using rule 51 (member)


State 154

   77 block: blockopenscope stmt blockclosescope •

    $default  reduce using rule 77 (block)


State 155

  118 parenthesiserror: LEFT_PARENTHESIS expr LEFT_CURLY •

    $default  reduce using rule 118 (parenthesiserror)


State 156

  117 parenthesiserror: LEFT_PARENTHESIS expr RIGHT_CURLY •

    $default  reduce using rule 117 (parenthesiserror)


State 157

  103 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS • stmt
  104       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS • stmt ELSE stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 183
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 158

  106 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS • stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 184
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 159

   62 expressionlist: expr COMMA • expressionlist

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr                 go to state 121
    term                 go to state 32
    assignexpr           go to state 33
    primary              go to state 34
    lvalue               go to state 35
    member               go to state 36
    call                 go to state 37
    expressionlist       go to state 185
    expressionlisterror  go to state 123
    objectdef            go to state 38
    const                go to state 45


State 160

   60 elist: LEFT_SQUARE expressionlist RIGHT_SQUARE •

    $default  reduce using rule 60 (elist)


State 161

   64 expressionlisterror: expressionlist COMMA • RIGHT_PARENTHESIS
   65                    | expressionlist COMMA • RIGHT_SQUARE
   66                    | expressionlist COMMA • LEFT_SQUARE
   68                    | expressionlist COMMA • RIGHT_CURLY
   69                    | expressionlist COMMA • LEFT_CURLY

    LEFT_CURLY         shift, and go to state 186
    RIGHT_CURLY        shift, and go to state 187
    LEFT_SQUARE        shift, and go to state 188
    RIGHT_SQUARE       shift, and go to state 189
    RIGHT_PARENTHESIS  shift, and go to state 190


State 162

   67 expressionlisterror: expressionlist op •

    $default  reduce using rule 67 (expressionlisterror)


State 163

   60 elist: LEFT_SQUARE • expressionlist RIGHT_SQUARE
   70 objectdef: LEFT_SQUARE • objectdeflist RIGHT_SQUARE
   73 indexed: LEFT_SQUARE • indexedelemlist RIGHT_SQUARE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 138
    LEFT_SQUARE       shift, and go to state 163
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr                 go to state 121
    term                 go to state 32
    assignexpr           go to state 33
    primary              go to state 34
    lvalue               go to state 35
    member               go to state 36
    call                 go to state 37
    elist                go to state 92
    expressionlist       go to state 122
    expressionlisterror  go to state 123
    objectdef            go to state 38
    objectdeflist        go to state 93
    indexed              go to state 94
    indexedelemlist      go to state 139
    indexedelem          go to state 140
    const                go to state 45


State 164

  108 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON • expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 191
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 165

   16 expr: expr • op expr
  111 forstmterror: FOR LEFT_PARENTHESIS elist expr • SEMICOLON elist RIGHT_PARENTHESIS stmt
  112             | FOR LEFT_PARENTHESIS elist expr • SEMICOLON elist RIGHT_PARENTHESIS

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    SEMICOLON       shift, and go to state 192

    op  go to state 103


State 166

  114 forstmterror: FOR RIGHT_PARENTHESIS elist LEFT_PARENTHESIS •

    $default  reduce using rule 114 (forstmterror)


State 167

   16 expr: expr • op expr
  113 forstmterror: FOR elist SEMICOLON expr • elist RIGHT_PARENTHESIS stmt

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    LEFT_SQUARE     shift, and go to state 58

    op     go to state 103
    elist  go to state 193


State 168

   91 functionerror: FUNCTION functioname LEFT_PARENTHESIS op • RIGHT_PARENTHESIS
   92              | FUNCTION functioname LEFT_PARENTHESIS op • RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 194


State 169

   89 functionerror: FUNCTION functioname LEFT_PARENTHESIS idlist • block
   90              | FUNCTION functioname LEFT_PARENTHESIS idlist • RIGHT_PARENTHESIS

    LEFT_CURLY         shift, and go to state 16
    RIGHT_CURLY        shift, and go to state 17
    RIGHT_PARENTHESIS  shift, and go to state 195

    block            go to state 196
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42


State 170

  100 idlist: ID COMMA • idlist
  102 idlisterror: ID COMMA • LEFT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 197
    ID                shift, and go to state 131

    idlist       go to state 198
    idlisterror  go to state 134


State 171

   83 funcdef: FUNCTION functioname funcdefopenscope idlist • RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 199


State 172

   88 functionerror: FUNCTION functioname idlist RIGHT_PARENTHESIS • block

    LEFT_CURLY   shift, and go to state 16
    RIGHT_CURLY  shift, and go to state 17

    block            go to state 200
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42


State 173

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 177


State 174

   16 expr: expr • op expr
   76 indexedelem: LEFT_CURLY expr • COLON expr RIGHT_CURLY

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    COLON           shift, and go to state 201

    op  go to state 103


State 175

   73 indexed: LEFT_SQUARE indexedelemlist RIGHT_SQUARE •

    $default  reduce using rule 73 (indexed)


State 176

   75 indexedelemlist: indexedelem COMMA • indexedelemlist

    LEFT_CURLY  shift, and go to state 138

    indexedelemlist  go to state 202
    indexedelem      go to state 140


State 177

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    LEFT_SQUARE  shift, and go to state 58

    elist  go to state 203


State 178

   50 member: lvalue LEFT_SQUARE expr RIGHT_SQUARE •

    $default  reduce using rule 50 (member)


State 179

   58 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 58 (normcall)


State 180

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    LEFT_SQUARE  shift, and go to state 58

    elist  go to state 204


State 181

   52 member: call LEFT_SQUARE expr RIGHT_SQUARE •

    $default  reduce using rule 52 (member)


State 182

   53 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 53 (call)


State 183

  103 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt •
  104       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt • ELSE stmt

    ELSE  shift, and go to state 205

    $default  reduce using rule 103 (ifstmt)


State 184

  106 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt •

    $default  reduce using rule 106 (whilestmt)


State 185

   62 expressionlist: expr COMMA expressionlist •
   64 expressionlisterror: expressionlist • COMMA RIGHT_PARENTHESIS
   65                    | expressionlist • COMMA RIGHT_SQUARE
   66                    | expressionlist • COMMA LEFT_SQUARE
   67                    | expressionlist • op
   68                    | expressionlist • COMMA RIGHT_CURLY
   69                    | expressionlist • COMMA LEFT_CURLY

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    COMMA           shift, and go to state 161

    AND             [reduce using rule 62 (expressionlist)]
    OR              [reduce using rule 62 (expressionlist)]
    PLUS            [reduce using rule 62 (expressionlist)]
    MINUS           [reduce using rule 62 (expressionlist)]
    MULTIPLICATION  [reduce using rule 62 (expressionlist)]
    DIVISION        [reduce using rule 62 (expressionlist)]
    MODULO          [reduce using rule 62 (expressionlist)]
    EQUAL           [reduce using rule 62 (expressionlist)]
    NOT_EQUAL       [reduce using rule 62 (expressionlist)]
    GREATER         [reduce using rule 62 (expressionlist)]
    LESS            [reduce using rule 62 (expressionlist)]
    GREATER_EQUAL   [reduce using rule 62 (expressionlist)]
    LESS_EQUAL      [reduce using rule 62 (expressionlist)]
    COMMA           [reduce using rule 62 (expressionlist)]
    $default        reduce using rule 62 (expressionlist)

    op  go to state 162


State 186

   69 expressionlisterror: expressionlist COMMA LEFT_CURLY •

    $default  reduce using rule 69 (expressionlisterror)


State 187

   68 expressionlisterror: expressionlist COMMA RIGHT_CURLY •

    $default  reduce using rule 68 (expressionlisterror)


State 188

   66 expressionlisterror: expressionlist COMMA LEFT_SQUARE •

    $default  reduce using rule 66 (expressionlisterror)


State 189

   65 expressionlisterror: expressionlist COMMA RIGHT_SQUARE •

    $default  reduce using rule 65 (expressionlisterror)


State 190

   64 expressionlisterror: expressionlist COMMA RIGHT_PARENTHESIS •

    $default  reduce using rule 64 (expressionlisterror)


State 191

   16 expr: expr • op expr
  108 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr • SEMICOLON elist RIGHT_PARENTHESIS stmt

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    SEMICOLON       shift, and go to state 206

    op  go to state 103


State 192

  111 forstmterror: FOR LEFT_PARENTHESIS elist expr SEMICOLON • elist RIGHT_PARENTHESIS stmt
  112             | FOR LEFT_PARENTHESIS elist expr SEMICOLON • elist RIGHT_PARENTHESIS

    LEFT_SQUARE  shift, and go to state 58

    elist  go to state 207


State 193

  113 forstmterror: FOR elist SEMICOLON expr elist • RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 208


State 194

   91 functionerror: FUNCTION functioname LEFT_PARENTHESIS op RIGHT_PARENTHESIS •
   92              | FUNCTION functioname LEFT_PARENTHESIS op RIGHT_PARENTHESIS • block

    LEFT_CURLY   shift, and go to state 16
    RIGHT_CURLY  shift, and go to state 17

    LEFT_CURLY   [reduce using rule 91 (functionerror)]
    RIGHT_CURLY  [reduce using rule 91 (functionerror)]
    $default     reduce using rule 91 (functionerror)

    block            go to state 209
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42


State 195

   90 functionerror: FUNCTION functioname LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS •

    $default  reduce using rule 90 (functionerror)


State 196

   89 functionerror: FUNCTION functioname LEFT_PARENTHESIS idlist block •

    $default  reduce using rule 89 (functionerror)


State 197

  102 idlisterror: ID COMMA LEFT_PARENTHESIS •

    $default  reduce using rule 102 (idlisterror)


State 198

  100 idlist: ID COMMA idlist •

    $default  reduce using rule 100 (idlist)


State 199

   83 funcdef: FUNCTION functioname funcdefopenscope idlist RIGHT_PARENTHESIS • block

    LEFT_CURLY   shift, and go to state 16
    RIGHT_CURLY  shift, and go to state 17

    block            go to state 210
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42


State 200

   88 functionerror: FUNCTION functioname idlist RIGHT_PARENTHESIS block •

    $default  reduce using rule 88 (functionerror)


State 201

   76 indexedelem: LEFT_CURLY expr COLON • expr RIGHT_CURLY

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24

    expr        go to state 211
    term        go to state 32
    assignexpr  go to state 33
    primary     go to state 34
    lvalue      go to state 35
    member      go to state 36
    call        go to state 37
    objectdef   go to state 38
    const       go to state 45


State 202

   75 indexedelemlist: indexedelem COMMA indexedelemlist •

    $default  reduce using rule 75 (indexedelemlist)


State 203

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 212


State 204

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 213


State 205

  104 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE • stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 214
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 206

  108 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON • elist RIGHT_PARENTHESIS stmt

    LEFT_SQUARE  shift, and go to state 58

    elist  go to state 215


State 207

  111 forstmterror: FOR LEFT_PARENTHESIS elist expr SEMICOLON elist • RIGHT_PARENTHESIS stmt
  112             | FOR LEFT_PARENTHESIS elist expr SEMICOLON elist • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 216


State 208

  113 forstmterror: FOR elist SEMICOLON expr elist RIGHT_PARENTHESIS • stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 217
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 209

   92 functionerror: FUNCTION functioname LEFT_PARENTHESIS op RIGHT_PARENTHESIS block •

    $default  reduce using rule 92 (functionerror)


State 210

   83 funcdef: FUNCTION functioname funcdefopenscope idlist RIGHT_PARENTHESIS block •

    $default  reduce using rule 83 (funcdef)


State 211

   16 expr: expr • op expr
   76 indexedelem: LEFT_CURLY expr COLON expr • RIGHT_CURLY

    AND             shift, and go to state 65
    OR              shift, and go to state 66
    PLUS            shift, and go to state 67
    MINUS           shift, and go to state 101
    MULTIPLICATION  shift, and go to state 69
    DIVISION        shift, and go to state 70
    MODULO          shift, and go to state 71
    EQUAL           shift, and go to state 72
    NOT_EQUAL       shift, and go to state 73
    GREATER         shift, and go to state 74
    LESS            shift, and go to state 75
    GREATER_EQUAL   shift, and go to state 76
    LESS_EQUAL      shift, and go to state 77
    RIGHT_CURLY     shift, and go to state 218

    op  go to state 103


State 212

   55 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 55 (call)


State 213

   59 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 59 (methodcall)


State 214

  104 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt •

    $default  reduce using rule 104 (ifstmt)


State 215

  108 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist • RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 219


State 216

  111 forstmterror: FOR LEFT_PARENTHESIS elist expr SEMICOLON elist RIGHT_PARENTHESIS • stmt
  112             | FOR LEFT_PARENTHESIS elist expr SEMICOLON elist RIGHT_PARENTHESIS •

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    LOCAL             shift, and go to state 9
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    IF              [reduce using rule 112 (forstmterror)]
    WHILE           [reduce using rule 112 (forstmterror)]
    FOR             [reduce using rule 112 (forstmterror)]
    FUNCTION        [reduce using rule 112 (forstmterror)]
    RETURN          [reduce using rule 112 (forstmterror)]
    BREAK           [reduce using rule 112 (forstmterror)]
    CONTINUE        [reduce using rule 112 (forstmterror)]
    LOCAL           [reduce using rule 112 (forstmterror)]
    LEFT_CURLY      [reduce using rule 112 (forstmterror)]
    RIGHT_CURLY     [reduce using rule 112 (forstmterror)]
    DOUBLE_COLON    [reduce using rule 112 (forstmterror)]
    ID              [reduce using rule 112 (forstmterror)]
    CONST_STRING    [reduce using rule 112 (forstmterror)]
    COMMENT_NESTED  [reduce using rule 112 (forstmterror)]
    BLOCK_COMMENT   [reduce using rule 112 (forstmterror)]
    COMMENT_LINE    [reduce using rule 112 (forstmterror)]
    $default        reduce using rule 112 (forstmterror)

    stmt             go to state 220
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 217

  113 forstmterror: FOR elist SEMICOLON expr elist RIGHT_PARENTHESIS stmt •

    $default  reduce using rule 113 (forstmterror)


State 218

   76 indexedelem: LEFT_CURLY expr COLON expr RIGHT_CURLY •

    $default  reduce using rule 76 (indexedelem)


State 219

  108 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS • stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    LEFT_CURLY        shift, and go to state 16
    RIGHT_CURLY       shift, and go to state 17
    LEFT_SQUARE       shift, and go to state 18
    LEFT_PARENTHESIS  shift, and go to state 19
    DOUBLE_COLON      shift, and go to state 20
    ID                shift, and go to state 21
    CONST_INT         shift, and go to state 22
    CONST_REAL        shift, and go to state 23
    CONST_STRING      shift, and go to state 24
    COMMENT_NESTED    shift, and go to state 25
    BLOCK_COMMENT     shift, and go to state 26
    COMMENT_LINE      shift, and go to state 27

    stmt             go to state 221
    expr             go to state 31
    term             go to state 32
    assignexpr       go to state 33
    primary          go to state 34
    lvalue           go to state 35
    member           go to state 36
    call             go to state 37
    objectdef        go to state 38
    block            go to state 39
    blockopenscope   go to state 40
    blockclosescope  go to state 41
    blockerror       go to state 42
    funcdef          go to state 43
    functionerror    go to state 44
    const            go to state 45
    ifstmt           go to state 46
    whilestmt        go to state 47
    forstmt          go to state 48
    forstmterror     go to state 49
    returnstmt       go to state 50
    ignore           go to state 51


State 220

  111 forstmterror: FOR LEFT_PARENTHESIS elist expr SEMICOLON elist RIGHT_PARENTHESIS stmt •

    $default  reduce using rule 111 (forstmterror)


State 221

  108 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt •

    $default  reduce using rule 108 (forstmt)
